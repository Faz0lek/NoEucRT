/**
 * @file NoEucEngine.hpp
 * @author Martin Kosteln√≠k (xkoste12@stud.fit.vutbr.cz)
 * @brief Declaration file of the NoEucEngine class. This is the class that combines all the
 * other classes and suits as an interface between them. It also handles UI, which is very simple,
 * consisting only of two lines of texts. Lastly it handles system events.
 * @version 1.0
 * @date 2021-05-12
 * 
 * @copyright Copyright (c) 2021
 * 
 */

#pragma once

#include <SFML/Graphics.hpp>
#include <memory>

#include "Renderer.hpp"
#include "Scene.hpp"
#include "Shader.hpp"
#include "MovementHandler.hpp"

/**
 * @brief Representation of the non-euclidean rendering engine as a whole.
 * This class combines all the other classes into one functional module.
 * 
 */
class NoEucEngine
{
public:
	NoEucEngine();

	/**
	 * @brief Main method of the engine.
	 * 
	 * @return int Returns an error code. 0 means no error.
	 */
	int run();

private:
	const size_t width;
	const size_t height;

	/**
	 * @brief Texture to render into
	 * 
	 */
	sf::Texture texture;

	/**
	 * @brief A drawable object containing rendered texture.
	 * 
	 */
	sf::Sprite renderedImage;

	Scene scene;
	sf::RenderWindow window;
	Renderer renderer;
	MovementHandler movementHandler;

	sf::Clock fpsClock;

	sf::Font font;
	sf::Text fpsText;
	sf::Text sceneName;

	/**
	 * @brief This method handles system events generated by keyboard.
	 * 
	 */
	void handleEvents();

	std::vector<std::unique_ptr<Shader>> shaders;
	size_t shaderIndex;
	Shader* activeShader;
};
